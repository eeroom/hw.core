<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.eeroom</groupId>
  <artifactId>hzkd</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>hzkd</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <parent>
    <groupId>io.github.eeroom</groupId>
    <artifactId>hzsln</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../hzsln/pom.xml</relativePath>
  </parent>
  <properties>

  </properties>

  <dependencies>
    <dependency>
      <!--      做springmvc的web项目本身只需要这一个依赖-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>
    <dependency>
      <!--      servlet规范，这个依赖是写代码和编译时需要，程序运行时tomcat监听请求转发到其自带的javax.servlet-api，最终到我们的代码-->
      <!--      servlet规范3.0版本以上引入新的约定接口，实现java代码配置进行程序初始化，而老版本只能通过取web.xml里的配置信息实现程序初始化-->
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
    <!--    实现restapi，需要引入jackson序列化json请求参数和json响应结果-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox-swagger2.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox-swagger2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${camunda-engine.version}</version>
      <exclusions>
        <exclusion>
          <!--          这个是3版本的spring-beans,移除掉，避免冲突-->
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>${java-jwt.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector-java.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.eeroom</groupId>
      <artifactId>hzcore</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.github.eeroom</groupId>
      <artifactId>nalu</artifactId>
      <version>${nalu.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.eeroom</groupId>
      <artifactId>apiclient</artifactId>
      <version>${apiclient.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb-api.version}</version>
    </dependency>


  </dependencies>

  <build>
    <finalName>hzkd</finalName>
    <!--    maven项目默认的路径是/src/main/java,现在改成/src/java，所有需要修改pom的配置文件-->
    <sourceDirectory>${basedir}/java</sourceDirectory>
    <resources>
      <resource>
        <!--    maven项目默认的路径是/src/main/resources,现在改成/src/resources，所有需要修改pom的配置文件-->
        <directory>${basedir}/resources</directory>
      </resource>
    </resources>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
          <configuration>
            <!--    maven项目默认的路径是/src/main/webapp,现在改成/src/webapp，所有需要修改pom的配置文件-->
            <warSourceDirectory>${basedir}/webapp</warSourceDirectory>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>10</source>
          <target>10</target>
        </configuration>
      </plugin>
      <plugin>
        <!--        这个类似于iisexpress，便于开发调试。同时也支持把程序推到其他的tomcat服务器上（需要双方做好认证校验之类的）-->
        <!--        vs直接支持发布到IIS，本质是通过ftp或者iis deploy-->
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <path>/</path>
          <port>8121</port>
          <uriEncoding>UTF-8</uriEncoding>
          <!--    maven项目默认的路径是/src/main/webapp,现在改成/src/webapp，所有需要修改pom的配置文件-->
          <warSourceDirectory>${basedir}/webapp</warSourceDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
